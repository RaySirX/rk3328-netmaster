#
# build environment workspace
#
export BUILDENV=${PWD?}/buildEnv
export BUILDENV_DOWNLOADS=${BUILDENV?}/downloads
export BUILD_CONFIG_DIR=${BUILDENV}/config
#
# PI repo and distro
#
# export PI_REPO=https://distro.libre.computer/ci/raspbian/11
# export PI_DISTRO=2022-09-22-raspbian-bullseye-arm64+roc-rk3328-cc.img.xz
# export PI_FILE_CHECKSUM_URL=${PI_REPO?}/SHA256SUMS
#
# original image disk too small to install extra software
# use "6gig" local image with expanded 6 Gig disk
#
export PI_REPO=buildEnv/downloads
export PI_DISTRO=2022-09-22-raspbian-bullseye-arm64+roc-rk3328-cc.6gig.img.xz
export PI_FILE_CHECKSUM_URL=${PI_REPO}/SHA256SUMS
#
# the install.d scripts use this as the anchor directory
#
DEFAULT_PI_DISTRO_MOUNT_DIR=/
#
# by definition it's impossible to generate 4 char UUIDs .. but not unpossible
#
UUID4=$(shuf -e {a..z} {0..9} | head -4 | paste -sd '')
#
# resulting target hostname
#
export BUILD_OS_HOSTNAME=${BUILD_OS_HOSTNAME:-netmaster-${UUID4}}
#
# packer build <build name>.<source type>.<source name>
# build name = docker_netmaster
# source type = arm
# source name = mkaczanowski_xz_sha256
export PACKER_BUILD=docker_netmaster.arm.mkaczanowski_xz_sha256
#export PACKER_BUILD=docker_netmaster.arm.rk3328_xz_sha256
#
#
# initial OS user with sudo
#
export BUILD_OS_USER=config
export BUILD_OS_USER_PASS=${BUILD_OS_USER_PASS?'check .secrets file'}
export BUILD_OS_DNS_DOMAIN=home
